- data fetch via API instead of straight to db + move repositories to Shared
   TODO: GetById en Exists via API, GetAll() done
   TODO: modify DTO's, Owner as DTO and Template as DTO (or just not include Template, not used atm)
   TODO: Validation - save request to db as VirtualMachine with known properties before deployment and status (Pending, Completed...)
	validate existing name through all VirtualMachine records

- implement RabbitMQ
Requests MS with ApplicationDbContext for requests. Publish VmRequested, CtRequested

VM en CT microservices with ApplicationDbContext for saved VM's and CT's. 
Subscribe to VmRequested (prefetch 5) and handle it => Publish VmCreated.
Subscribe to CtRequested (prefetch 1) and handle it => Publich CtCreated.

Requests MS Subscribe to VmRequested, CtRequested to update Request data with status
Watch for validation! validate request name only for Pending requests. validate on VirtualMachines


- check if queue is absolutely necessary in the service. probably better to work per request if we execute the request on a separate background thread
	Queue is needed for containers, on cloning the template ct is locked so not possible to clone concurrently.


using Blazor server fixes next 2 items (SignalR is baked in):
(blazor wasm can also use SignalR, but needs to be set up manually, same for data representation)
(no need to use javascript to update front-end data)
- SignalR: update data on change in front-end, or use built-in mssql functionality (name?)
- front-end: mvc controller and api controlle seperately? fetch data in js
=> use Blazor server

-(gRPC instead of REST for HogentVmPortalWebAPI)

- implement authentication for webapp and api('s), check what's best to use
- check how to work with Cancellationtoken
- simplify delegate use for ActionEvent? Maybe switch to semaphore (check)

- App: .NET MAUI?
- extra web API that calls the data service (or repository)
- validate data in this service instead of controller

- checkout nginx or haproxy (load balancing etc) for microservices, can be used with gRPC